# -*- coding: utf-8 -*-
"""Sentiment Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vsz6wbF_gR3kpMJfa2tpX8kJR0M9xTVO
"""

import pandas as pd

data = pd.read_csv('sentiments.csv',sep=',', encoding='latin-1')
print('data shape: ', data.shape)
data.head()

data.info()

# Create quick lambda functions to find the polarity and subjectivity of each routine
# Terminal / Anaconda Navigator: conda install -c conda-forge textblob
from textblob import TextBlob

pol = lambda x: TextBlob(x).sentiment.polarity
sub = lambda x: TextBlob(x).sentiment.subjectivity

data['polarity'] = data['ï»¿Remarks'].apply(pol)
data['subjectivity'] = data['ï»¿Remarks'].apply(sub)
data

data_name = pd.read_csv('full sent.csv',sep=',', encoding='latin-1')
print('data shape: ', data_name.shape)
data_name.head()

data = pd.merge(data_name, data, left_index=True, right_index=True)

data

data.index

import matplotlib.pyplot as plt

plt.rcParams['figure.figsize'] = [10, 8]

for index in enumerate(data.index):
    x = data.polarity
    y = data.subjectivity
    plt.scatter(x, y, color='blue')
    plt.xlim(-.01, .12)

plt.title('Sentiment Analysis', fontsize=20)
plt.xlabel('<-- Negative -------- Positive -->', fontsize=15)
plt.ylabel('<-- Facts -------- Opinions -->', fontsize=15)

plt.show()

data['pos_or_neg']='null'
data

data.info()

for p in data.index:
  if data._get_value(p, 'polarity') < 0:
    data.at[p,'pos_or_neg']="negative"
  elif data._get_value(p, 'polarity') == 0:
    data.at[p,'pos_or_neg']="neutral"
  elif data._get_value(p, 'polarity') > 0:
    data.at[p,'pos_or_neg']="Positive"

data

print(data["pos_or_neg"].unique())

df_negative = pd.DataFrame()
df_negative

for p in data.index:
  if data._get_value(p, 'pos_or_neg') == "negative":
    df_negative.at[p,'neg_Remarks'] = data.at[p,'ï»¿Remarks']
    df_negative.at[p,'name'] = data.at[p,'ï»¿Name']
df_negative

df_Positive = pd.DataFrame()
df_Positive

for p in data.index:
  if data._get_value(p, 'pos_or_neg') == "Positive":
    df_Positive.at[p,'Positive_Remarks'] = data.at[p,'ï»¿Remarks']
    df_Positive.at[p,'name'] = data.at[p,'ï»¿Name']
df_Positive

df_neutral = pd.DataFrame()
df_neutral

for p in data.index:
  if data._get_value(p, 'pos_or_neg') == "neutral":
    df_neutral.at[p,'neutral_Remarks'] = data.at[p,'ï»¿Remarks']
    df_neutral.at[p,'name'] = data.at[p,'ï»¿Name']

df_neutral

from collections import Counter
Counter(" ".join(df_neutral["neutral_Remarks"]).split()).most_common(100)

from collections import Counter
Counter(" ".join(df_Positive["Positive_Remarks"]).split()).most_common(100)

data['Ope_or_fac']='null'

for p in data.index:
  if data._get_value(p, 'subjectivity') < 0.5:
    data.at[p,'Ope_or_fac']="fact"
  elif data._get_value(p, 'subjectivity') == 0.5:
    data.at[p,'Ope_or_fac']="neutral"
  elif data._get_value(p, 'subjectivity') > 0.5:
    data.at[p,'Ope_or_fac']="opnion"

data

print(data["Ope_or_fac"].unique())

print(data["subjectivity"].unique())

df_opnion = pd.DataFrame()
df_opnion

#<0.5 opnion
#>0.5 fact
for p in data.index:
  if data._get_value(p, 'Ope_or_fac') == "opnion":
    df_opnion.at[p,'opnion_Remarks'] = data.at[p,'ï»¿Remarks']
    df_opnion.at[p,'name'] = data.at[p,'ï»¿Name']

df_opnion

df_fact = pd.DataFrame()
df_fact

#<0.5 opnion
#>0.5 fact
for p in data.index:
  if data._get_value(p, 'Ope_or_fac') == "fact":
    df_fact.at[p,'fact_Remarks'] = data.at[p,'ï»¿Remarks']
    df_fact.at[p,'name'] = data.at[p,'ï»¿Name']

df_fact

df_neutral = pd.DataFrame()
df_neutral

for p in data.index:
  if data._get_value(p, 'Ope_or_fac') == "neutral":
    df_neutral.at[p,'neutral_Remarks'] = data.at[p,'ï»¿Remarks']
    df_neutral.at[p,'name'] = data.at[p,'ï»¿Name']

df_neutral

df_Positive

from google.colab import files
df_Positive.to_csv('output.csv', encoding = 'utf-8-sig')
files.download('output.csv')